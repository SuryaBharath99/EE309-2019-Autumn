C51 COMPILER V9.60.0.0   MAIN1                                                             10/01/2019 15:44:28 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN1
OBJECT MODULE PLACED IN .\Objects\main1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lab7\main1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\main1.lst) TABS(2) OBJECT(.\Objects\main1.obj)

line level    source

   1          /*
   2          EE337 lab7: ADC IC tlv1543 interfacinng with pt-51
   3          L.W.: (1) Complete spi() function from spi.h so that this projecct will work properly 
   4                (2) Check whether it is working or not
   5                (3) Edit adc() function to make it genralized.
   6          */
   7          
   8          #include <at89c5131.h>
   9          #include "lcd.h"                                    //Driver for interfacing lcd 
  10          #include "tlv1543.h"                                //Driver for interfacing ADC ic tlv1543
  11          
  12          
  13          char adc_ip_data_ascii[6]={0,0,0,0,0,'\0'};         //string array for saving ascii of input sample
  14          char display1[]="CHANNEL 1";              //Display msg on 1st line of lcd
  15          char display2[]="CHANNEL 2";              //Display msg on 1st line of lcd
  16          char display3[3][10]={"CHANNEL 11", "CHANNEL 12", "CHANNEL 13"};    
  17          
  18          char display_msg2[]=" mV";                          //Display msg on 2nd line of lcd
  19          unsigned int a=1, b=2;
  20          
  21          
  22          void main(void)
  23          { 
  24   1        unsigned int adc_data=0,dac_data=0, i=0,j=0, k=11;
  25   1      
  26   1        spi_init();
  27   1        adc_init();
  28   1        lcd_init();
  29   1        
  30   1          lcd_cmd(0x80);                                  //Move cursor to first line
  31   1          //lcd_write_string(display_msg1);                 //Display "ADC channel-00:" on first line of lcd
  32   1        
  33   1        
  34   1      //      TMOD= 0x01;
  35   1      //      THO= 0x00;
  36   1      //      TLO= 0x00;
  37   1        
  38   1        while(1)
  39   1        { 
  40   2          for( i=0; i<20; i++){
  41   3        
  42   3          lcd_cmd(0x80);                                  //Move cursor to first line
  43   3          lcd_write_string(display1);
  44   3              
  45   3          adc_data=adc(a);
  46   3          
  47   3          adc_data= (unsigned int)(3.225806452*adc_data) ;// converting to milli volt (3.3*1000*i/p / 1023)
  48   3        
  49   3          int_to_string(adc_data,adc_ip_data_ascii);      //Convering integer to string of ascii
  50   3          
  51   3          lcd_cmd(0xC0);                                  //Move cursor to 2nd line
  52   3          lcd_write_string(adc_ip_data_ascii);            //Print analog sampled input on lcd
  53   3          lcd_write_string(display_msg2);                 //Display "XXXXX mV" on 2nd line of lcd
  54   3              
C51 COMPILER V9.60.0.0   MAIN1                                                             10/01/2019 15:44:28 PAGE 2   

  55   3          }
  56   2      
  57   2          lcd_cmd(0x01);    
  58   2        
  59   2        for( i=0; i<20; i++){
  60   3      
  61   3          
  62   3          lcd_cmd(0x80);                                  //Move cursor to first line
  63   3          lcd_write_string(display2);
  64   3          adc_data=adc(b);
  65   3          
  66   3          adc_data= (unsigned int)(3.225806452*adc_data) ;// converting to milli volt (3.3*1000*i/p / 1023)
  67   3        
  68   3          int_to_string(adc_data,adc_ip_data_ascii);      //Convering integer to string of ascii
  69   3          
  70   3          lcd_cmd(0xC0);                                  //Move cursor to 2nd line
  71   3          lcd_write_string(adc_ip_data_ascii);            //Print analog sampled input on lcd
  72   3          lcd_write_string(display_msg2);                 //Display "XXXXX mV" on 2nd line of lcd
  73   3        }
  74   2        
  75   2        lcd_cmd(0x01);
  76   2        
  77   2        
  78   2        for( k=11; k<14; k++){
  79   3          
  80   3          for( i=0; i<20; i++){
  81   4          char internal[10];
  82   4            for(j=0; j<10; j++)
  83   4            {
  84   5            internal[j]=display3[k-11][j];
  85   5            }
  86   4            
  87   4            lcd_cmd(0x80);
  88   4            lcd_write_string(internal);
  89   4          adc_data=adc(k);
  90   4          
  91   4          adc_data= (unsigned int)(3.225806452*adc_data) ;// converting to milli volt (3.3*1000*i/p / 1023)
  92   4        
  93   4          int_to_string(adc_data,adc_ip_data_ascii);      //Convering integer to string of ascii
  94   4          
  95   4          lcd_cmd(0xC0);                                  //Move cursor to 2nd line
  96   4          lcd_write_string(adc_ip_data_ascii);            //Print analog sampled input on lcd
  97   4          lcd_write_string(display_msg2);                 //Display "XXXXX mV" on 2nd line of lcd
  98   4            
  99   4        }
 100   3          lcd_cmd(0x01);
 101   3      }
 102   2      
 103   2        }
 104   1      }
 105          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    769    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     65      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   MAIN1                                                             10/01/2019 15:44:28 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
