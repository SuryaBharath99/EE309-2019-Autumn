C51 COMPILER V9.60.0.0   MAIN                                                              10/01/2019 16:46:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE lab7\main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          EE337 lab7: ADC IC tlv1543 interfacinng with pt-51
   3          L.W.: (1) Complete spi() function from spi.h so that this projecct will work properly 
   4                (2) Check whether it is working or not
   5                (3) Edit adc() function to make it genralized.
   6          */
   7          
   8          #include <at89c5131.h>
   9          #include "lcd.h"                                    //Driver for interfacing lcd 
  10          #include "tlv1543.h"                                //Driver for interfacing ADC ic tlv1543
  11          
  12          
  13          char adc_ip_data_ascii[6]={0,0,0,0,0,'\0'};         //string array for saving ascii of input sample
  14          char display_msg1[]="Channel-";             //Display msg on 1st line of lcd
  15          char display_msg2[]=" mV:";                         //Display msg on 2nd line of lcd
  16          
  17          unsigned int i = 0x0000;
  18            unsigned int j = 0x0000;
  19          void main(void)
  20          {
  21   1        int j=0;
  22   1        unsigned int adc_data=0,dac_data=0;
  23   1        
  24   1      
  25   1        
  26   1          //lcd_cmd(0x80);
  27   1              //Move cursor to first line
  28   1          
  29   1        //lcd_write_string(display_msg1);     
  30   1        //Display "ADC channel-00:" on first line of lcd
  31   1          spi_init();
  32   1        adc_init();
  33   1        lcd_init();
  34   1        
  35   1        while(1)
  36   1        {i =0;
  37   2          while(i<100){
  38   3          i = i+1;
  39   3          
  40   3        
  41   3          lcd_cmd(0x80);//Move cursor to first line
  42   3          
  43   3        lcd_write_string(display_msg1);
  44   3          
  45   3          lcd_write_char(0x43);
  46   3          
  47   3          adc_data=adc(12);
  48   3          
  49   3          adc_data= (unsigned int)(3.225806452*adc_data) ;// converting to milli volt (3.3*1000*i/p / 1023)
  50   3        
  51   3          int_to_string(adc_data,adc_ip_data_ascii);      //Convering integer to string of ascii
  52   3          
  53   3          lcd_cmd(0xC0);                                  //Move cursor to 2nd line
  54   3          lcd_write_string(adc_ip_data_ascii);            //Print analog sampled input on lcd
C51 COMPILER V9.60.0.0   MAIN                                                              10/01/2019 16:46:44 PAGE 2   

  55   3          lcd_write_string(display_msg2);                 //Display "XXXXX mV" on 2nd line of lcd
  56   3          
  57   3          
  58   3          msdelay(40);}
  59   2          
  60   2          
  61   2          
  62   2          
  63   2          
  64   2          
  65   2          
  66   2          
  67   2          
  68   2            spi_init();
  69   2              adc_init();
  70   2              lcd_init();
  71   2          j= 0;
  72   2          
  73   2          while(j<100){
  74   3          j = j+1;
  75   3          
  76   3          
  77   3            
  78   3            lcd_cmd(0x80);//Move cursor to first line
  79   3          
  80   3        lcd_write_string(display_msg1);
  81   3        
  82   3        lcd_write_char(0x30);
  83   3            
  84   3            
  85   3          adc_data=adc(0);
  86   3          
  87   3          adc_data= (unsigned int)(3.225806452*adc_data) ;// converting to milli volt (3.3*1000*i/p / 1023)
  88   3        
  89   3          int_to_string(adc_data,adc_ip_data_ascii);      //Convering integer to string of ascii
  90   3          
  91   3          lcd_cmd(0xC0);                                  //Move cursor to 2nd line
  92   3          lcd_write_string(adc_ip_data_ascii);            //Print analog sampled input on lcd
  93   3          lcd_write_string(display_msg2);   
  94   3           msdelay(40);}
  95   2          
  96   2        }
  97   1      }
  98          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    653    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     25      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
